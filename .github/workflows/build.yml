name: Build Cross-Platform Installers

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [21]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew build -x test
    
    - name: Generate Linux Installers
      run: |
        ./gradlew jpackageLinux
        ./gradlew jpackageLinuxDeb
        ./gradlew jpackageLinuxRpm
    
    - name: Upload Linux Installers
      uses: actions/upload-artifact@v4
      with:
        name: linux-installers
        path: build/dist/*.AppImage,build/dist/*.deb,build/dist/*.rpm,build/dist/*.snap
        retention-days: 30

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        java-version: [21]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew build -x test
    
    - name: Generate Windows Installer
      run: ./gradlew jpackage
    
    - name: Upload Windows Installer
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: build/dist/*.exe
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        java-version: [21]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew build -x test
    
    - name: Generate macOS Installer
      run: |
        ./gradlew jpackageMac
        ./gradlew jpackageMacDmg
    
    - name: Upload macOS Installers
      uses: actions/upload-artifact@v4
      with:
        name: macos-installers
        path: build/dist/*.pkg,build/dist/*.dmg
        retention-days: 30

  create-release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/linux-installers/*.AppImage
          artifacts/linux-installers/*.deb
          artifacts/linux-installers/*.rpm
          artifacts/linux-installers/*.snap
          artifacts/windows-installer/*.exe
          artifacts/macos-installers/*.pkg
          artifacts/macos-installers/*.dmg
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 